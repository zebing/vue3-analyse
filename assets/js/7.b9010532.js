(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{415:function(n,s,e){n.exports=e.p+"assets/img/1-1.836f0aaf.png"},428:function(n,s,e){"use strict";e.r(s);var t=e(62),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[n._v("#")]),n._v(" 目录结构")]),n._v(" "),t("p",[n._v("在正式进入源码之前，先看一下项目的整体结构。对项目结构有一个清晰全面的了解。")]),n._v(" "),t("p",[n._v("首先在项目目录通过命令 "),t("code",[n._v("tree -L 1")]),n._v(" 来获取最外层的目录结构。")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v("├── BACKERS.md\n├── CHANGELOG.md        // 版本更新日志\n├── LICENSE\n├── README.md\n├── SECURITY.md\n├── api-extractor.json  // TypeScript API分析和提取工具\n├── jest.config.js      // jest 单元测试配置文件\n├── netlify.toml\n├── node_modules        // "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("npm")]),n._v(" 包目录\n├── package.json\n├── packages            // 源码目录，vue3 所有源码放在这个目录下面\n├── pnpm-lock.yaml\n├── pnpm-workspace.yaml\n├── rollup.config.js    // rollup 打包工具配置文件\n├── scripts             // 命令行构建相关文件\n├── test-dts            // TypeScript 类型声明文件\n└── tsconfig.json       // TypeScript 配置文件\n")])])]),t("p",[n._v("然后切换到 "),t("code",[n._v("packages")]),n._v(" 源码目录下，执行 "),t("code",[n._v("tree -L 2")]),n._v(" 命令。可以看到源码分成很多个包，每个包负责独立的功能。")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v("├── compiler-core            // 编译核心包\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── compiler-dom            // 编译代码 dom 相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── compiler-sfc           // 编译组件相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── compiler-ssr          // 编译 ssr相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── global.d.ts\n├── reactivity            // 响应式代码\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── reactivity-transform  // 编译器转换，以改善使用VUE的反应性API时，特别是能够使用Refs，而无需任何值。\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── runtime-core         // 远行时核心源码\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   ├── src\n│   └── types\n├── runtime-dom         // 运行时 dom 相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   ├── src\n│   └── types\n├── runtime-test       // 运行时测试相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── server-renderer    // 服务端渲染\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── node_modules\n│   ├── package.json\n│   └── src\n├── sfc-playground     // sfc 相关\n│   ├── index.html\n│   ├── node_modules\n│   ├── package.json\n│   ├── public\n│   ├── src\n│   └── vite.config.ts\n├── shared             // 工具库\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── dist\n│   ├── index.js\n│   ├── package.json\n│   └── src\n├── size-check\n│   ├── README.md\n│   ├── brotli.js\n│   ├── package.json\n│   ├── src\n│   └── vite.config.js\n├── template-explorer\n│   ├── README.md\n│   ├── index.html\n│   ├── local.html\n│   ├── node_modules\n│   ├── package.json\n│   ├── src\n│   └── style.css\n├── vue               // 开发调试相关\n│   ├── LICENSE\n│   ├── README.md\n│   ├── __tests__\n│   ├── api-extractor.json\n│   ├── compiler-sfc\n│   ├── dist\n│   ├── examples\n│   ├── index.js\n│   ├── index.mjs\n│   ├── macros-global.d.ts\n│   ├── macros.d.ts\n│   ├── node_modules\n│   ├── package.json\n│   ├── ref-macros.d.ts\n│   ├── server-renderer\n│   └── src\n└── vue-compat         // 是 Vue3 的一个构建，提供了可配置的 Vue2 兼容行为\n    ├── LICENSE\n    ├── README.md\n    ├── __tests__\n    ├── dist\n    ├── index.js\n    ├── package.json\n    └── src\n")])])]),t("h2",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[n._v("#")]),n._v(" 编译")]),n._v(" "),t("p",[n._v("有四个跟编译相关的包。分别是 "),t("code",[n._v("compiler-core")]),n._v("， "),t("code",[n._v("compiler-dom")]),n._v("， "),t("code",[n._v("compiler-sfc")]),n._v(" 和 "),t("code",[n._v("compiler-ssr")]),n._v("。")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("compiler-core")]),n._v(" 核心编译包，会将组件代码编译成 ast 树，再生成运行时代码。")]),n._v(" "),t("li",[t("strong",[n._v("compiler-dom")]),n._v(" 解析 html 模版代码，v-model，v-on，style 等。")]),n._v(" "),t("li",[t("strong",[n._v("compiler-ssr")]),n._v(" 将 server 端代码编译成字符串，优化 server 运行性能。")]),n._v(" "),t("li",[t("strong",[n._v("compiler-sfc")]),n._v(" 编译 "),t("code",[n._v(".vue")]),n._v(" 组件，将 vue 模版文件代码编译成可运行的 js 代码。")])]),n._v(" "),t("p",[n._v("它们的引用关系如下：")]),n._v(" "),t("p",[t("img",{attrs:{src:e(415),alt:"compiler core"}})]),n._v(" "),t("h2",{attrs:{id:"运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[n._v("#")]),n._v(" 运行")]),n._v(" "),t("p",[n._v("组件代码实际运行相关的包。")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("runtime-core")]),n._v(" 核心运行包，组件的初始化，更新，卸载，diff 算法等。")]),n._v(" "),t("li",[t("strong",[n._v("runtime-dom")]),n._v(" dom 相关操作代码，dom 的创建，更新，卸载，事件监听等。")]),n._v(" "),t("li",[t("strong",[n._v("runtime-test")]),n._v(" vue 自己的测试包，性能比 jsdom 更优。")]),n._v(" "),t("li",[t("strong",[n._v("server-renderer")]),n._v(" ssr 将 vue 代码通过 renderToString 渲染成 html 字符串返回给浏览器运行。")])]),n._v(" "),t("h2",{attrs:{id:"响应式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#响应式"}},[n._v("#")]),n._v(" 响应式")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("reactivity")]),n._v(" 响应式代码，将组件 data 添加 proxy 监控。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);